// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../node_modules/core-js/library/modules/_global.js":[function(require,module,exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],"../node_modules/core-js/library/modules/_core.js":[function(require,module,exports) {
var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],"../node_modules/core-js/library/modules/_a-function.js":[function(require,module,exports) {
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],"../node_modules/core-js/library/modules/_ctx.js":[function(require,module,exports) {
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":"../node_modules/core-js/library/modules/_a-function.js"}],"../node_modules/core-js/library/modules/_is-object.js":[function(require,module,exports) {
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],"../node_modules/core-js/library/modules/_an-object.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":"../node_modules/core-js/library/modules/_is-object.js"}],"../node_modules/core-js/library/modules/_fails.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],"../node_modules/core-js/library/modules/_descriptors.js":[function(require,module,exports) {
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":"../node_modules/core-js/library/modules/_fails.js"}],"../node_modules/core-js/library/modules/_dom-create.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_is-object":"../node_modules/core-js/library/modules/_is-object.js","./_global":"../node_modules/core-js/library/modules/_global.js"}],"../node_modules/core-js/library/modules/_ie8-dom-define.js":[function(require,module,exports) {
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js","./_fails":"../node_modules/core-js/library/modules/_fails.js","./_dom-create":"../node_modules/core-js/library/modules/_dom-create.js"}],"../node_modules/core-js/library/modules/_to-primitive.js":[function(require,module,exports) {
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":"../node_modules/core-js/library/modules/_is-object.js"}],"../node_modules/core-js/library/modules/_object-dp.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./_ie8-dom-define":"../node_modules/core-js/library/modules/_ie8-dom-define.js","./_to-primitive":"../node_modules/core-js/library/modules/_to-primitive.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js"}],"../node_modules/core-js/library/modules/_property-desc.js":[function(require,module,exports) {
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],"../node_modules/core-js/library/modules/_hide.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js","./_property-desc":"../node_modules/core-js/library/modules/_property-desc.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js"}],"../node_modules/core-js/library/modules/_has.js":[function(require,module,exports) {
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],"../node_modules/core-js/library/modules/_export.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var ctx = require('./_ctx');
var hide = require('./_hide');
var has = require('./_has');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_global":"../node_modules/core-js/library/modules/_global.js","./_core":"../node_modules/core-js/library/modules/_core.js","./_ctx":"../node_modules/core-js/library/modules/_ctx.js","./_hide":"../node_modules/core-js/library/modules/_hide.js","./_has":"../node_modules/core-js/library/modules/_has.js"}],"../node_modules/core-js/library/modules/_cof.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],"../node_modules/core-js/library/modules/_is-array.js":[function(require,module,exports) {
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":"../node_modules/core-js/library/modules/_cof.js"}],"../node_modules/core-js/library/modules/es6.array.is-array.js":[function(require,module,exports) {
// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = require('./_export');

$export($export.S, 'Array', { isArray: require('./_is-array') });

},{"./_export":"../node_modules/core-js/library/modules/_export.js","./_is-array":"../node_modules/core-js/library/modules/_is-array.js"}],"../node_modules/core-js/library/fn/array/is-array.js":[function(require,module,exports) {
require('../../modules/es6.array.is-array');
module.exports = require('../../modules/_core').Array.isArray;

},{"../../modules/es6.array.is-array":"../node_modules/core-js/library/modules/es6.array.is-array.js","../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js":[function(require,module,exports) {
module.exports = require("core-js/library/fn/array/is-array");
},{"core-js/library/fn/array/is-array":"../node_modules/core-js/library/fn/array/is-array.js"}],"../node_modules/core-js/library/modules/_iobject.js":[function(require,module,exports) {
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":"../node_modules/core-js/library/modules/_cof.js"}],"../node_modules/core-js/library/modules/_defined.js":[function(require,module,exports) {
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],"../node_modules/core-js/library/modules/_to-iobject.js":[function(require,module,exports) {
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_iobject":"../node_modules/core-js/library/modules/_iobject.js","./_defined":"../node_modules/core-js/library/modules/_defined.js"}],"../node_modules/core-js/library/modules/_to-integer.js":[function(require,module,exports) {
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],"../node_modules/core-js/library/modules/_to-length.js":[function(require,module,exports) {
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":"../node_modules/core-js/library/modules/_to-integer.js"}],"../node_modules/core-js/library/modules/_to-absolute-index.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":"../node_modules/core-js/library/modules/_to-integer.js"}],"../node_modules/core-js/library/modules/_array-includes.js":[function(require,module,exports) {
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_to-length":"../node_modules/core-js/library/modules/_to-length.js","./_to-absolute-index":"../node_modules/core-js/library/modules/_to-absolute-index.js"}],"../node_modules/core-js/library/modules/_library.js":[function(require,module,exports) {
module.exports = true;

},{}],"../node_modules/core-js/library/modules/_shared.js":[function(require,module,exports) {

var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});

},{"./_core":"../node_modules/core-js/library/modules/_core.js","./_global":"../node_modules/core-js/library/modules/_global.js","./_library":"../node_modules/core-js/library/modules/_library.js"}],"../node_modules/core-js/library/modules/_uid.js":[function(require,module,exports) {
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],"../node_modules/core-js/library/modules/_shared-key.js":[function(require,module,exports) {
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":"../node_modules/core-js/library/modules/_shared.js","./_uid":"../node_modules/core-js/library/modules/_uid.js"}],"../node_modules/core-js/library/modules/_object-keys-internal.js":[function(require,module,exports) {
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_has":"../node_modules/core-js/library/modules/_has.js","./_to-iobject":"../node_modules/core-js/library/modules/_to-iobject.js","./_array-includes":"../node_modules/core-js/library/modules/_array-includes.js","./_shared-key":"../node_modules/core-js/library/modules/_shared-key.js"}],"../node_modules/core-js/library/modules/_enum-bug-keys.js":[function(require,module,exports) {
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],"../node_modules/core-js/library/modules/_object-keys.js":[function(require,module,exports) {
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_object-keys-internal":"../node_modules/core-js/library/modules/_object-keys-internal.js","./_enum-bug-keys":"../node_modules/core-js/library/modules/_enum-bug-keys.js"}],"../node_modules/core-js/library/modules/_object-dps.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_object-dp":"../node_modules/core-js/library/modules/_object-dp.js","./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./_object-keys":"../node_modules/core-js/library/modules/_object-keys.js","./_descriptors":"../node_modules/core-js/library/modules/_descriptors.js"}],"../node_modules/core-js/library/modules/_html.js":[function(require,module,exports) {
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":"../node_modules/core-js/library/modules/_global.js"}],"../node_modules/core-js/library/modules/_object-create.js":[function(require,module,exports) {
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":"../node_modules/core-js/library/modules/_an-object.js","./_object-dps":"../node_modules/core-js/library/modules/_object-dps.js","./_enum-bug-keys":"../node_modules/core-js/library/modules/_enum-bug-keys.js","./_shared-key":"../node_modules/core-js/library/modules/_shared-key.js","./_dom-create":"../node_modules/core-js/library/modules/_dom-create.js","./_html":"../node_modules/core-js/library/modules/_html.js"}],"../node_modules/core-js/library/modules/es6.object.create.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: require('./_object-create') });

},{"./_export":"../node_modules/core-js/library/modules/_export.js","./_object-create":"../node_modules/core-js/library/modules/_object-create.js"}],"../node_modules/core-js/library/fn/object/create.js":[function(require,module,exports) {
require('../../modules/es6.object.create');
var $Object = require('../../modules/_core').Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};

},{"../../modules/es6.object.create":"../node_modules/core-js/library/modules/es6.object.create.js","../../modules/_core":"../node_modules/core-js/library/modules/_core.js"}],"../node_modules/@babel/runtime-corejs2/core-js/object/create.js":[function(require,module,exports) {
module.exports = require("core-js/library/fn/object/create");
},{"core-js/library/fn/object/create":"../node_modules/core-js/library/fn/object/create.js"}],"js/canvas-renderer-and-projector.min.js":[function(require,module,exports) {
"use strict";

var _isArray = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/array/is-array"));

var _create = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/create"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var bgColor = 16777215;
THREE.SpriteCanvasMaterial = function (e) {
  THREE.Material.call(this), this.type = "SpriteCanvasMaterial", this.color = new THREE.Color(16777215), this.program = function () {}, this.setValues(e);
}, THREE.SpriteCanvasMaterial.prototype = (0, _create.default)(THREE.Material.prototype), THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial, THREE.SpriteCanvasMaterial.prototype.isSpriteCanvasMaterial = !0, THREE.SpriteCanvasMaterial.prototype.clone = function () {
  var e = new THREE.SpriteCanvasMaterial();
  return e.copy(this), e.color.copy(this.color), e.program = this.program, e;
}, THREE.CanvasRenderer = function (e) {
  function r() {
    me.setRGB(0, 0, 0), ve.setRGB(0, 0, 0), ye.setRGB(0, 0, 0);

    for (var e = 0, r = g.length; e < r; e++) {
      var t = g[e],
          i = t.color;
      t.isAmbientLight ? me.add(i) : t.isDirectionalLight ? ve.add(i) : t.isPointLight && ye.add(i);
    }
  }

  function t(e, r, t) {
    for (var i = 0, o = g.length; i < o; i++) {
      var n = g[i];

      if (Ee.copy(n.color), n.isDirectionalLight) {
        var a = xe.setFromMatrixPosition(n.matrixWorld).normalize(),
            s = r.dot(a);
        if (s <= 0) continue;
        s *= n.intensity, t.add(Ee.multiplyScalar(s));
      } else if (n.isPointLight) {
        var a = xe.setFromMatrixPosition(n.matrixWorld),
            s = r.dot(xe.subVectors(a, e).normalize());
        if (s <= 0) continue;
        if (0 == (s *= 0 == n.distance ? 1 : 1 - Math.min(e.distanceTo(a) / n.distance, 1))) continue;
        s *= n.intensity, t.add(Ee.multiplyScalar(s));
      }
    }
  }

  function i(e, r, t) {
    f(t.opacity), d(t.blending);
    var i = r.scale.x * U,
        o = r.scale.y * q,
        n = Math.sqrt(i * i + o * o);

    if (ue.min.set(e.x - n, e.y - n), ue.max.set(e.x + n, e.y + n), t.isSpriteMaterial) {
      var a = t.map;

      if (null !== a) {
        var s = fe[a.id];

        if (void 0 !== s && s.version === a.version || (s = c(a), fe[a.id] = s), void 0 !== s.canvas) {
          y(s.canvas);
          var l = a.image,
              p = l.width * a.offset.x,
              E = l.height * a.offset.y,
              h = l.width * a.repeat.x,
              u = l.height * a.repeat.y,
              m = i / h,
              x = o / u;
          Z.save(), Z.translate(e.x, e.y), 0 !== t.rotation && Z.rotate(t.rotation), Z.translate(-i / 2, -o / 2), Z.scale(m, x), Z.translate(-p, -E), Z.fillRect(p, E, h, u), Z.restore();
        }
      } else y(t.color.getStyle()), Z.save(), Z.translate(e.x, e.y), 0 !== t.rotation && Z.rotate(t.rotation), Z.scale(i, -o), Z.fillRect(-.5, -.5, 1, 1), Z.restore();
    } else t.isSpriteCanvasMaterial ? (v(t.color.getStyle()), y(t.color.getStyle()), Z.save(), Z.translate(e.x, e.y), 0 !== t.rotation && Z.rotate(t.rotation), Z.scale(i, o), t.program(Z), Z.restore()) : t.isPointsMaterial && (y(t.color.getStyle()), Z.save(), Z.translate(e.x, e.y), 0 !== t.rotation && Z.rotate(t.rotation), Z.scale(i * t.size, -o * t.size), Z.fillRect(-.5, -.5, 1, 1), Z.restore());
  }

  function o(e, r, t, i) {
    if (f(i.opacity), d(i.blending), Z.beginPath(), Z.moveTo(e.positionScreen.x, e.positionScreen.y), Z.lineTo(r.positionScreen.x, r.positionScreen.y), i.isLineBasicMaterial) {
      if (h(i.linewidth), u(i.linecap), m(i.linejoin), i.vertexColors !== THREE.VertexColors) v(i.color.getStyle());else {
        var o = t.vertexColors[0].getStyle(),
            n = t.vertexColors[1].getStyle();
        if (o === n) v(o);else {
          try {
            var a = Z.createLinearGradient(e.positionScreen.x, e.positionScreen.y, r.positionScreen.x, r.positionScreen.y);
            a.addColorStop(0, o), a.addColorStop(1, n);
          } catch (e) {
            a = o;
          }

          v(a);
        }
      }
      i.isLineDashedMaterial && x([i.dashSize, i.gapSize]), Z.stroke(), ue.expandByScalar(2 * i.linewidth), i.isLineDashedMaterial && x([]);
    }
  }

  function n(e, r, i, o, n, c, E, h) {
    if (A.info.render.vertices += 3, A.info.render.faces++, f(h.opacity), d(h.blending), M = e.positionScreen.x, C = e.positionScreen.y, b = r.positionScreen.x, z = r.positionScreen.y, V = i.positionScreen.x, j = i.positionScreen.y, a(M, C, b, z, V, j), (h.isMeshLambertMaterial || h.isMeshPhongMaterial || h.isMeshStandardMaterial) && null === h.map) ce.copy(h.color), pe.copy(h.emissive), h.vertexColors === THREE.FaceColors && ce.multiply(E.color), le.copy(me), Re.copy(e.positionWorld).add(r.positionWorld).add(i.positionWorld).divideScalar(3), t(Re, E.normalModel, le), le.multiply(ce).add(pe), !0 === h.wireframe ? s(le, h.wireframeLinewidth, h.wireframeLinecap, h.wireframeLinejoin) : l(le);else if (h.isMeshBasicMaterial || h.isMeshLambertMaterial || h.isMeshPhongMaterial || h.isMeshStandardMaterial) {
      if (null !== h.map) {
        var u = h.map.mapping;
        u === THREE.UVMapping && (L = E.uvs, p(M, C, b, z, V, j, L[o].x, L[o].y, L[n].x, L[n].y, L[c].x, L[c].y, h.map));
      } else null !== h.envMap ? h.envMap.mapping === THREE.SphericalReflectionMapping && (Te.copy(E.vertexNormalsModel[o]).applyMatrix3(ge), O = .5 * Te.x + .5, B = .5 * Te.y + .5, Te.copy(E.vertexNormalsModel[n]).applyMatrix3(ge), P = .5 * Te.x + .5, W = .5 * Te.y + .5, Te.copy(E.vertexNormalsModel[c]).applyMatrix3(ge), N = .5 * Te.x + .5, k = .5 * Te.y + .5, p(M, C, b, z, V, j, O, B, P, W, N, k, h.envMap)) : (le.copy(h.color), h.vertexColors === THREE.FaceColors && le.multiply(E.color), !0 === h.wireframe ? s(le, h.wireframeLinewidth, h.wireframeLinecap, h.wireframeLinejoin) : l(le));
    } else h.isMeshNormalMaterial ? (Te.copy(E.normalModel).applyMatrix3(ge), le.setRGB(Te.x, Te.y, Te.z).multiplyScalar(.5).addScalar(.5), !0 === h.wireframe ? s(le, h.wireframeLinewidth, h.wireframeLinecap, h.wireframeLinejoin) : l(le)) : (le.setRGB(1, 1, 1), !0 === h.wireframe ? s(le, h.wireframeLinewidth, h.wireframeLinecap, h.wireframeLinejoin) : l(le));
  }

  function a(e, r, t, i, o, n) {
    Z.beginPath(), Z.moveTo(e, r), Z.lineTo(t, i), Z.lineTo(o, n), Z.closePath();
  }

  function s(e, r, t, i) {
    h(r), u(t), m(i), v(e.getStyle()), Z.stroke(), ue.expandByScalar(2 * r);
  }

  function l(e) {
    y(e.getStyle()), Z.fill();
  }

  function c(e) {
    if (0 === e.version || e instanceof THREE.CompressedTexture || e instanceof THREE.DataTexture) return {
      canvas: void 0,
      version: e.version
    };
    var r = e.image;
    if (!1 === r.complete) return {
      canvas: void 0,
      version: 0
    };
    var t = e.wrapS === THREE.RepeatWrapping || e.wrapS === THREE.MirroredRepeatWrapping,
        i = e.wrapT === THREE.RepeatWrapping || e.wrapT === THREE.MirroredRepeatWrapping,
        o = e.wrapS === THREE.MirroredRepeatWrapping,
        n = e.wrapT === THREE.MirroredRepeatWrapping,
        a = document.createElement("canvas");
    a.width = r.width * (o ? 2 : 1), a.height = r.height * (n ? 2 : 1);
    var s = a.getContext("2d");
    s.setTransform(1, 0, 0, -1, 0, r.height), s.drawImage(r, 0, 0), !0 === o && (s.setTransform(-1, 0, 0, -1, r.width, r.height), s.drawImage(r, -r.width, 0)), !0 === n && (s.setTransform(1, 0, 0, 1, 0, 0), s.drawImage(r, 0, r.height)), !0 === o && !0 === n && (s.setTransform(-1, 0, 0, 1, r.width, 0), s.drawImage(r, -r.width, r.height));
    var l = "no-repeat";
    !0 === t && !0 === i ? l = "repeat" : !0 === t ? l = "repeat-x" : !0 === i && (l = "repeat-y");
    var c = Z.createPattern(a, l);
    return e.onUpdate && e.onUpdate(e), {
      canvas: c,
      version: e.version
    };
  }

  function p(e, r, t, i, o, n, a, s, l, p, E, f, d) {
    var h = fe[d.id];
    if (void 0 !== h && h.version === d.version || (h = c(d), fe[d.id] = h), void 0 === h.canvas) return y("rgba( 0, 0, 0, 1)"), void Z.fill();
    y(h.canvas);
    var u,
        m,
        v,
        x,
        R,
        T,
        g,
        S,
        H = d.offset.x / d.repeat.x,
        w = d.offset.y / d.repeat.y,
        M = d.image.width * d.repeat.x,
        C = d.image.height * d.repeat.y;
    a = (a + H) * M, s = (s + w) * C, l = (l + H) * M, p = (p + w) * C, E = (E + H) * M, f = (f + w) * C, t -= e, i -= r, o -= e, n -= r, l -= a, p -= s, E -= a, f -= s, 0 !== (g = l * f - E * p) && (S = 1 / g, u = (f * t - p * o) * S, m = (f * i - p * n) * S, v = (l * o - E * t) * S, x = (l * n - E * i) * S, R = e - u * a - v * s, T = r - m * a - x * s, Z.save(), Z.transform(u, m, v, x, R, T), Z.fill(), Z.restore());
  }

  function E(e, r, t) {
    var i,
        o = r.x - e.x,
        n = r.y - e.y,
        a = o * o + n * n;
    0 !== a && (i = t / Math.sqrt(a), o *= i, n *= i, r.x += o, r.y += n, e.x -= o, e.y -= n);
  }

  function f(e) {
    ee !== e && (Z.globalAlpha = e, ee = e);
  }

  function d(e) {
    re !== e && (e === THREE.NormalBlending ? Z.globalCompositeOperation = "source-over" : e === THREE.AdditiveBlending ? Z.globalCompositeOperation = "lighter" : e === THREE.SubtractiveBlending ? Z.globalCompositeOperation = "darker" : e === THREE.MultiplyBlending && (Z.globalCompositeOperation = "multiply"), re = e);
  }

  function h(e) {
    oe !== e && (Z.lineWidth = e, oe = e);
  }

  function u(e) {
    ne !== e && (Z.lineCap = e, ne = e);
  }

  function m(e) {
    ae !== e && (Z.lineJoin = e, ae = e);
  }

  function v(e) {
    te !== e && (Z.strokeStyle = e, te = e);
  }

  function y(e) {
    ie !== e && (Z.fillStyle = e, ie = e);
  }

  function x(e) {
    se.length !== e.length && (Z.setLineDash(e), se = e);
  }

  console.log("THREE.CanvasRenderer", THREE.REVISION), e = e || {};

  var R,
      T,
      g,
      S,
      H,
      w,
      M,
      C,
      b,
      z,
      V,
      j,
      L,
      O,
      B,
      P,
      W,
      N,
      k,
      A = this,
      F = new THREE.Projector(),
      D = void 0 !== e.canvas ? e.canvas : document.createElement("canvas"),
      G = D.width,
      I = D.height,
      U = Math.floor(G / 2),
      q = Math.floor(I / 2),
      J = 0,
      K = 0,
      Q = G,
      X = I,
      Y = 1,
      Z = D.getContext("2d", {
    alpha: !0 === e.alpha
  }),
      $ = new THREE.Color(bgColor),
      _ = !0 === e.alpha ? 0 : 1,
      ee = 1,
      re = 0,
      te = null,
      ie = null,
      oe = null,
      ne = null,
      ae = null,
      se = [],
      le = new THREE.Color(),
      ce = new THREE.Color(),
      pe = new THREE.Color(),
      Ee = new THREE.Color(),
      fe = {},
      de = new THREE.Box2(),
      he = new THREE.Box2(),
      ue = new THREE.Box2(),
      me = new THREE.Color(),
      ve = new THREE.Color(),
      ye = new THREE.Color(),
      xe = new THREE.Vector3(),
      Re = new THREE.Vector3(),
      Te = new THREE.Vector3(),
      ge = new THREE.Matrix3();

  void 0 === Z.setLineDash && (Z.setLineDash = function () {}), this.domElement = D, this.autoClear = !0, this.sortObjects = !0, this.sortElements = !0, this.info = {
    render: {
      vertices: 0,
      faces: 0
    }
  }, this.getContext = function () {
    return Z;
  }, this.getContextAttributes = function () {
    return Z.getContextAttributes();
  }, this.getPixelRatio = function () {
    return Y;
  }, this.setPixelRatio = function (e) {
    void 0 !== e && (Y = e);
  }, this.setSize = function (e, r, t) {
    G = e * Y, I = r * Y, D.width = G, D.height = I, U = Math.floor(G / 2), q = Math.floor(I / 2), !1 !== t && (D.style.width = e + "px", D.style.height = r + "px"), de.min.set(-U, -q), de.max.set(U, q), he.min.set(-U, -q), he.max.set(U, q), ee = 1, re = 0, te = null, ie = null, oe = null, ne = null, ae = null, this.setViewport(0, 0, e, r);
  }, this.setViewport = function (e, r, t, i) {
    J = e * Y, K = r * Y, Q = t * Y, X = i * Y;
  }, this.setScissor = function () {}, this.setScissorTest = function () {}, this.setClearColor = function (e, r) {
    $.set(e), _ = void 0 !== r ? r : 1, he.min.set(-U, -q), he.max.set(U, q);
  }, this.setClearColorHex = function (e, r) {
    console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."), this.setClearColor(e, r);
  }, this.getClearColor = function () {
    return $;
  }, this.getClearAlpha = function () {
    return _;
  }, this.getMaxAnisotropy = function () {
    return 0;
  }, this.clear = function () {
    !1 === he.isEmpty() && (he.intersect(de), he.expandByScalar(2), he.min.x = he.min.x + U, he.min.y = -he.min.y + q, he.max.x = he.max.x + U, he.max.y = -he.max.y + q, _ < 1 && Z.clearRect(0 | he.min.x, 0 | he.max.y, he.max.x - he.min.x | 0, he.min.y - he.max.y | 0), _ > 0 && (f(1), d(THREE.NormalBlending), y("rgba(" + Math.floor(255 * $.r) + "," + Math.floor(255 * $.g) + "," + Math.floor(255 * $.b) + "," + _ + ")"), Z.fillRect(0 | he.min.x, 0 | he.max.y, he.max.x - he.min.x | 0, he.min.y - he.max.y | 0)), he.makeEmpty());
  }, this.clearColor = function () {}, this.clearDepth = function () {}, this.clearStencil = function () {}, this.render = function (e, t) {
    if (void 0 === t.isCamera) return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
    var a = e.background;
    a && a.isColor ? (f(1), d(THREE.NormalBlending), y(a.getStyle()), Z.fillRect(0, 0, G, I)) : !0 === this.autoClear && this.clear(), A.info.render.vertices = 0, A.info.render.faces = 0, Z.setTransform(Q / G, 0, 0, -X / I, J, I - K), Z.translate(U, q), R = F.projectScene(e, t, this.sortObjects, this.sortElements), T = R.elements, g = R.lights, ge.getNormalMatrix(t.matrixWorldInverse), r();

    for (var s = 0, l = T.length; s < l; s++) {
      var c = T[s],
          p = c.material;

      if (void 0 !== p && 0 !== p.opacity) {
        if (ue.makeEmpty(), c instanceof THREE.RenderableSprite) S = c, S.x *= U, S.y *= q, i(S, c, p);else if (c instanceof THREE.RenderableLine) S = c.v1, H = c.v2, S.positionScreen.x *= U, S.positionScreen.y *= q, H.positionScreen.x *= U, H.positionScreen.y *= q, ue.setFromPoints([S.positionScreen, H.positionScreen]), !0 === de.intersectsBox(ue) && o(S, H, c, p);else if (c instanceof THREE.RenderableFace) {
          if (S = c.v1, H = c.v2, w = c.v3, S.positionScreen.z < -1 || S.positionScreen.z > 1) continue;
          if (H.positionScreen.z < -1 || H.positionScreen.z > 1) continue;
          if (w.positionScreen.z < -1 || w.positionScreen.z > 1) continue;
          S.positionScreen.x *= U, S.positionScreen.y *= q, H.positionScreen.x *= U, H.positionScreen.y *= q, w.positionScreen.x *= U, w.positionScreen.y *= q, p.overdraw > 0 && (E(S.positionScreen, H.positionScreen, p.overdraw), E(H.positionScreen, w.positionScreen, p.overdraw), E(w.positionScreen, S.positionScreen, p.overdraw)), ue.setFromPoints([S.positionScreen, H.positionScreen, w.positionScreen]), !0 === de.intersectsBox(ue) && n(S, H, w, 0, 1, 2, c, p);
        }
        he.union(ue);
      }
    }

    Z.setTransform(1, 0, 0, 1, 0, 0);
  };
}, THREE.RenderableObject = function () {
  this.id = 0, this.object = null, this.z = 0, this.renderOrder = 0;
}, THREE.RenderableFace = function () {
  this.id = 0, this.v1 = new THREE.RenderableVertex(), this.v2 = new THREE.RenderableVertex(), this.v3 = new THREE.RenderableVertex(), this.normalModel = new THREE.Vector3(), this.vertexNormalsModel = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()], this.vertexNormalsLength = 0, this.color = new THREE.Color(), this.material = null, this.uvs = [new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2()], this.z = 0, this.renderOrder = 0;
}, THREE.RenderableVertex = function () {
  this.position = new THREE.Vector3(), this.positionWorld = new THREE.Vector3(), this.positionScreen = new THREE.Vector4(), this.visible = !0;
}, THREE.RenderableVertex.prototype.copy = function (e) {
  this.positionWorld.copy(e.positionWorld), this.positionScreen.copy(e.positionScreen);
}, THREE.RenderableLine = function () {
  this.id = 0, this.v1 = new THREE.RenderableVertex(), this.v2 = new THREE.RenderableVertex(), this.vertexColors = [new THREE.Color(), new THREE.Color()], this.material = null, this.z = 0, this.renderOrder = 0;
}, THREE.RenderableSprite = function () {
  this.id = 0, this.object = null, this.x = 0, this.y = 0, this.z = 0, this.rotation = 0, this.scale = new THREE.Vector2(), this.material = null, this.renderOrder = 0;
}, THREE.Projector = function () {
  function e(t) {
    if (!1 !== t.visible) {
      if (t instanceof THREE.Light) j.lights.push(t);else if (t instanceof THREE.Mesh || t instanceof THREE.Line || t instanceof THREE.Points) {
        if (!1 === t.material.visible) return;
        if (!0 === t.frustumCulled && !1 === D.intersectsObject(t)) return;
        r(t);
      } else if (t instanceof THREE.Sprite) {
        if (!1 === t.material.visible) return;
        if (!0 === t.frustumCulled && !1 === D.intersectsSprite(t)) return;
        r(t);
      }

      for (var i = t.children, o = 0, n = i.length; o < n; o++) {
        e(i[o]);
      }
    }
  }

  function r(e) {
    p = i(), p.id = e.id, p.object = e, L.setFromMatrixPosition(e.matrixWorld), L.applyMatrix4(k), p.z = L.z, p.renderOrder = e.renderOrder, j.objects.push(p);
  }

  function t(e, r, t) {
    var i = 1 / e.w;
    e.z *= i, e.z >= -1 && e.z <= 1 && (y = s(), y.id = r.id, y.x = e.x * i, y.y = e.y * i, y.z = e.z, y.renderOrder = r.renderOrder, y.object = r, y.rotation = r.rotation, y.scale.x = r.scale.x * Math.abs(y.x - (e.x + t.projectionMatrix.elements[0]) / (e.w + t.projectionMatrix.elements[12])), y.scale.y = r.scale.y * Math.abs(y.y - (e.y + t.projectionMatrix.elements[5]) / (e.w + t.projectionMatrix.elements[13])), y.material = r.material, j.elements.push(y));
  }

  function i() {
    if (E === g) {
      var e = new THREE.RenderableObject();
      return T.push(e), g++, E++, e;
    }

    return T[E++];
  }

  function o() {
    if (d === H) {
      var e = new THREE.RenderableVertex();
      return S.push(e), H++, d++, e;
    }

    return S[d++];
  }

  function n() {
    if (u === M) {
      var e = new THREE.RenderableFace();
      return w.push(e), M++, u++, e;
    }

    return w[u++];
  }

  function a() {
    if (v === b) {
      var e = new THREE.RenderableLine();
      return C.push(e), b++, v++, e;
    }

    return C[v++];
  }

  function s() {
    if (x === V) {
      var e = new THREE.RenderableSprite();
      return z.push(e), V++, x++, e;
    }

    return z[x++];
  }

  function l(e, r) {
    return e.renderOrder !== r.renderOrder ? e.renderOrder - r.renderOrder : e.z !== r.z ? r.z - e.z : e.id !== r.id ? e.id - r.id : 0;
  }

  function c(e, r) {
    var t = 0,
        i = 1,
        o = e.z + e.w,
        n = r.z + r.w,
        a = -e.z + e.w,
        s = -r.z + r.w;
    return o >= 0 && n >= 0 && a >= 0 && s >= 0 || !(o < 0 && n < 0 || a < 0 && s < 0) && (o < 0 ? t = Math.max(t, o / (o - n)) : n < 0 && (i = Math.min(i, o / (o - n))), a < 0 ? t = Math.max(t, a / (a - s)) : s < 0 && (i = Math.min(i, a / (a - s))), !(i < t) && (e.lerp(r, t), r.lerp(e, 1 - i), !0));
  }

  var p,
      E,
      f,
      d,
      h,
      u,
      m,
      v,
      y,
      x,
      R,
      T = [],
      g = 0,
      S = [],
      H = 0,
      w = [],
      M = 0,
      C = [],
      b = 0,
      z = [],
      V = 0,
      j = {
    objects: [],
    lights: [],
    elements: []
  },
      L = new THREE.Vector3(),
      O = new THREE.Vector4(),
      B = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),
      P = new THREE.Box3(),
      W = new Array(3),
      N = new THREE.Matrix4(),
      k = new THREE.Matrix4(),
      A = new THREE.Matrix4(),
      F = new THREE.Matrix3(),
      D = new THREE.Frustum(),
      G = new THREE.Vector4(),
      I = new THREE.Vector4();
  this.projectVector = function (e, r) {
    console.warn("THREE.Projector: .projectVector() is now vector.project()."), e.project(r);
  }, this.unprojectVector = function (e, r) {
    console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), e.unproject(r);
  }, this.pickingRay = function () {
    console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
  };

  var U = function U() {
    function e(e) {
      T = e, g = T.material, H.getNormalMatrix(T.matrixWorld), v.length = 0, y.length = 0, x.length = 0;
    }

    function r(e) {
      var r = e.position,
          t = e.positionWorld,
          i = e.positionScreen;
      t.copy(r).applyMatrix4(R), i.copy(t).applyMatrix4(k);
      var o = 1 / i.w;
      i.x *= o, i.y *= o, i.z *= o, e.visible = i.x >= -1 && i.x <= 1 && i.y >= -1 && i.y <= 1 && i.z >= -1 && i.z <= 1;
    }

    function t(e, t, i) {
      f = o(), f.position.set(e, t, i), r(f);
    }

    function i(e, r, t) {
      v.push(e, r, t);
    }

    function s(e, r, t) {
      y.push(e, r, t);
    }

    function l(e, r) {
      x.push(e, r);
    }

    function p(e, r, t) {
      return !0 === e.visible || !0 === r.visible || !0 === t.visible || (W[0] = e.positionScreen, W[1] = r.positionScreen, W[2] = t.positionScreen, B.intersectsBox(P.setFromPoints(W)));
    }

    function E(e, r, t) {
      return (t.positionScreen.x - e.positionScreen.x) * (r.positionScreen.y - e.positionScreen.y) - (t.positionScreen.y - e.positionScreen.y) * (r.positionScreen.x - e.positionScreen.x) < 0;
    }

    function d(e, r) {
      var t = S[e],
          i = S[r];
      t.positionScreen.copy(t.position).applyMatrix4(A), i.positionScreen.copy(i.position).applyMatrix4(A), !0 === c(t.positionScreen, i.positionScreen) && (t.positionScreen.multiplyScalar(1 / t.positionScreen.w), i.positionScreen.multiplyScalar(1 / i.positionScreen.w), m = a(), m.id = T.id, m.v1.copy(t), m.v2.copy(i), m.z = Math.max(t.positionScreen.z, i.positionScreen.z), m.renderOrder = T.renderOrder, m.material = T.material, T.material.vertexColors === THREE.VertexColors && (m.vertexColors[0].fromArray(y, 3 * e), m.vertexColors[1].fromArray(y, 3 * r)), j.elements.push(m));
    }

    function u(e, r, t) {
      var i = S[e],
          o = S[r],
          a = S[t];

      if (!1 !== p(i, o, a) && (g.side === THREE.DoubleSide || !0 === E(i, o, a))) {
        h = n(), h.id = T.id, h.v1.copy(i), h.v2.copy(o), h.v3.copy(a), h.z = (i.positionScreen.z + o.positionScreen.z + a.positionScreen.z) / 3, h.renderOrder = T.renderOrder, h.normalModel.fromArray(v, 3 * e), h.normalModel.applyMatrix3(H).normalize();

        for (var s = 0; s < 3; s++) {
          var l = h.vertexNormalsModel[s];
          l.fromArray(v, 3 * arguments[s]), l.applyMatrix3(H).normalize();
          h.uvs[s].fromArray(x, 2 * arguments[s]);
        }

        h.vertexNormalsLength = 3, h.material = T.material, j.elements.push(h);
      }
    }

    var v = [],
        y = [],
        x = [],
        T = null,
        g = null,
        H = new THREE.Matrix3();
    return {
      setObject: e,
      projectVertex: r,
      checkTriangleVisibility: p,
      checkBackfaceCulling: E,
      pushVertex: t,
      pushNormal: i,
      pushColor: s,
      pushUv: l,
      pushLine: d,
      pushTriangle: u
    };
  },
      q = new U();

  this.projectScene = function (r, i, s, p) {
    u = 0, v = 0, x = 0, j.elements.length = 0, !0 === r.autoUpdate && r.updateMatrixWorld(), null === i.parent && i.updateMatrixWorld(), N.copy(i.matrixWorldInverse), k.multiplyMatrices(i.projectionMatrix, N), D.setFromMatrix(k), E = 0, j.objects.length = 0, j.lights.length = 0, e(r), !0 === s && j.objects.sort(l);

    for (var f = j.objects, y = 0, T = f.length; y < T; y++) {
      var g = f[y].object,
          H = g.geometry;

      if (q.setObject(g), R = g.matrixWorld, d = 0, g instanceof THREE.Mesh) {
        if (H instanceof THREE.BufferGeometry) {
          var w = H.attributes,
              M = H.groups;
          if (void 0 === w.position) continue;

          for (var C = w.position.array, b = 0, z = C.length; b < z; b += 3) {
            q.pushVertex(C[b], C[b + 1], C[b + 2]);
          }

          if (void 0 !== w.normal) for (var V = w.normal.array, b = 0, z = V.length; b < z; b += 3) {
            q.pushNormal(V[b], V[b + 1], V[b + 2]);
          }
          if (void 0 !== w.uv) for (var B = w.uv.array, b = 0, z = B.length; b < z; b += 2) {
            q.pushUv(B[b], B[b + 1]);
          }

          if (null !== H.index) {
            var P = H.index.array;
            if (M.length > 0) for (var W = 0; W < M.length; W++) {
              for (var U = M[W], b = U.start, z = U.start + U.count; b < z; b += 3) {
                q.pushTriangle(P[b], P[b + 1], P[b + 2]);
              }
            } else for (var b = 0, z = P.length; b < z; b += 3) {
              q.pushTriangle(P[b], P[b + 1], P[b + 2]);
            }
          } else for (var b = 0, z = C.length / 3; b < z; b += 3) {
            q.pushTriangle(b, b + 1, b + 2);
          }
        } else if (H instanceof THREE.Geometry) {
          var J = H.vertices,
              K = H.faces,
              Q = H.faceVertexUvs[0];
          F.getNormalMatrix(R);

          for (var X = g.material, Y = (0, _isArray.default)(X), Z = 0, $ = J.length; Z < $; Z++) {
            var _ = J[Z];
            if (L.copy(_), !0 === X.morphTargets) for (var ee = H.morphTargets, re = g.morphTargetInfluences, te = 0, ie = ee.length; te < ie; te++) {
              var oe = re[te];

              if (0 !== oe) {
                var ne = ee[te],
                    ae = ne.vertices[Z];
                L.x += (ae.x - _.x) * oe, L.y += (ae.y - _.y) * oe, L.z += (ae.z - _.z) * oe;
              }
            }
            q.pushVertex(L.x, L.y, L.z);
          }

          for (var se = 0, le = K.length; se < le; se++) {
            var ce = K[se];

            if (void 0 !== (X = !0 === Y ? g.material[ce.materialIndex] : g.material)) {
              var pe = X.side,
                  Ee = S[ce.a],
                  fe = S[ce.b],
                  de = S[ce.c];

              if (!1 !== q.checkTriangleVisibility(Ee, fe, de)) {
                var he = q.checkBackfaceCulling(Ee, fe, de);

                if (pe !== THREE.DoubleSide) {
                  if (pe === THREE.FrontSide && !1 === he) continue;
                  if (pe === THREE.BackSide && !0 === he) continue;
                }

                h = n(), h.id = g.id, h.v1.copy(Ee), h.v2.copy(fe), h.v3.copy(de), h.normalModel.copy(ce.normal), !1 !== he || pe !== THREE.BackSide && pe !== THREE.DoubleSide || h.normalModel.negate(), h.normalModel.applyMatrix3(F).normalize();

                for (var ue = ce.vertexNormals, me = 0, ve = Math.min(ue.length, 3); me < ve; me++) {
                  var ye = h.vertexNormalsModel[me];
                  ye.copy(ue[me]), !1 !== he || pe !== THREE.BackSide && pe !== THREE.DoubleSide || ye.negate(), ye.applyMatrix3(F).normalize();
                }

                h.vertexNormalsLength = ue.length;
                var xe = Q[se];
                if (void 0 !== xe) for (var Re = 0; Re < 3; Re++) {
                  h.uvs[Re].copy(xe[Re]);
                }
                h.color = ce.color, h.material = X, h.z = (Ee.positionScreen.z + fe.positionScreen.z + de.positionScreen.z) / 3, h.renderOrder = g.renderOrder, j.elements.push(h);
              }
            }
          }
        }
      } else if (g instanceof THREE.Line) {
        if (A.multiplyMatrices(k, R), H instanceof THREE.BufferGeometry) {
          var w = H.attributes;

          if (void 0 !== w.position) {
            for (var C = w.position.array, b = 0, z = C.length; b < z; b += 3) {
              q.pushVertex(C[b], C[b + 1], C[b + 2]);
            }

            if (void 0 !== w.color) for (var Te = w.color.array, b = 0, z = Te.length; b < z; b += 3) {
              q.pushColor(Te[b], Te[b + 1], Te[b + 2]);
            }
            if (null !== H.index) for (var P = H.index.array, b = 0, z = P.length; b < z; b += 2) {
              q.pushLine(P[b], P[b + 1]);
            } else for (var ge = g instanceof THREE.LineSegments ? 2 : 1, b = 0, z = C.length / 3 - 1; b < z; b += ge) {
              q.pushLine(b, b + 1);
            }
          }
        } else if (H instanceof THREE.Geometry) {
          var J = g.geometry.vertices;
          if (0 === J.length) continue;
          Ee = o(), Ee.positionScreen.copy(J[0]).applyMatrix4(A);

          for (var ge = g instanceof THREE.LineSegments ? 2 : 1, Z = 1, $ = J.length; Z < $; Z++) {
            Ee = o(), Ee.positionScreen.copy(J[Z]).applyMatrix4(A), (Z + 1) % ge > 0 || (fe = S[d - 2], G.copy(Ee.positionScreen), I.copy(fe.positionScreen), !0 === c(G, I) && (G.multiplyScalar(1 / G.w), I.multiplyScalar(1 / I.w), m = a(), m.id = g.id, m.v1.positionScreen.copy(G), m.v2.positionScreen.copy(I), m.z = Math.max(G.z, I.z), m.renderOrder = g.renderOrder, m.material = g.material, g.material.vertexColors === THREE.VertexColors && (m.vertexColors[0].copy(g.geometry.colors[Z]), m.vertexColors[1].copy(g.geometry.colors[Z - 1])), j.elements.push(m)));
          }
        }
      } else if (g instanceof THREE.Points) {
        if (A.multiplyMatrices(k, R), H instanceof THREE.Geometry) for (var J = g.geometry.vertices, Z = 0, $ = J.length; Z < $; Z++) {
          var _ = J[Z];
          O.set(_.x, _.y, _.z, 1), O.applyMatrix4(A), t(O, g, i);
        } else if (H instanceof THREE.BufferGeometry) {
          var w = H.attributes;
          if (void 0 !== w.position) for (var C = w.position.array, b = 0, z = C.length; b < z; b += 3) {
            O.set(C[b], C[b + 1], C[b + 2], 1), O.applyMatrix4(A), t(O, g, i);
          }
        }
      } else g instanceof THREE.Sprite && (O.set(R.elements[12], R.elements[13], R.elements[14], 1), O.applyMatrix4(k), t(O, g, i));
    }

    return !0 === p && j.elements.sort(l), j;
  };
};
},{"@babel/runtime-corejs2/core-js/array/is-array":"../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","@babel/runtime-corejs2/core-js/object/create":"../node_modules/@babel/runtime-corejs2/core-js/object/create.js"}]},{},["js/canvas-renderer-and-projector.min.js"], null)
//# sourceMappingURL=/js/canvas-renderer-and-projector.min.js.map